@model Events.Areas.Identity.Data.EventsUser
@using Microsoft.AspNetCore.Identity
@using Events.Areas.Identity.Data
@inject SignInManager<EventsUser> SignInManager
@inject UserManager<EventsUser> UserManager
@{
    var currentUser = await UserManager.GetUserAsync(User);
}
<!-- start header -->
<header>
    <div class="navbar navbar-default navbar-static-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <div class="navbar-brand">
                    <a asp-area="" asp-controller="Home" asp-action="Index"><img style="border-radius:50%;" src="~/img/logo.jpg" alt="logo" /></a>
                </div>
            </div>
            <div class="navbar-collapse collapse ">
                <ul class="nav navbar-nav">
                    <li><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
                    <li><a asp-area="" asp-controller="Events" asp-action="Index">Events</a></li>
                    <li><a asp-area="" asp-controller="Locations" asp-action="Index">Locations</a></li>
                    <li><a asp-area="" asp-controller="Artists" asp-action="Index">Artists</a></li>
                    <li class="active"><a asp-area="" asp-controller="Contact" asp-action="Index">Contact</a></li>
                    @{
                        if (!User.Identity.IsAuthenticated)
                        {
                            <li><a id="login" asp-area="Identity" asp-page="/Account/Login">Log In</a></li>
                        }
                        else
                        {
                            <li><a asp-area="Identity" asp-page="/Account/Manage/Index">My Account</a></li>
                            if (User.IsInRole("User"))
                            {
                                <li>
                                    <a asp-action="Index" asp-controller="Carts">
                                        <i class="fa" style="font-size:24px">&#xf07a;</i>
                                    </a>
                                </li>
                            }
                        }
                    }
                </ul>
                @if (TempData["Success"] != null)
                {
                    <script>
                        window.onload = function () {
                            alert("@TempData["Success"]");
                            setTimeout(2000);
                        };
                    </script>
                }
            </div>
        </div>
    </div>
</header>
<!-- end header -->
<section id="inner-headline">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2 class="pageTitle">Contact Us</h2>
            </div>
        </div>
    </div>
</section>
<div class="container">
    <main role="main" class="pb-3">
        <div id="wrapper">
            <section id="content">
                <div class="container">
                    <div class="row">
                        <div class="col-md-6">
                            <p>Complete the fields below in order to send us a message and press the submit button when done!</p>
                            <div class="alert alert-success hidden" id="contactSuccess">
                                <strong>Success!</strong> Your message has been sent to us.
                            </div>
                            <div class="alert alert-error hidden" id="contactError">
                                <strong>Error!</strong> There was an error sending your message.
                            </div>
                            <div class="contact-form">
                                <form id="contact-form" role="form" novalidate="novalidate" asp-action="SendMessage" asp-controller="Contact">
                                    <div class="form-group has-feedback">
                                        <label for="name">Name*</label>
                                        <input type="text" class="form-control" id="name" name="name" value="@Model.FirstName @Model.LastName">
                                        <i style="margin-top: 10px" class="fa fa-user form-control-feedback"></i>
                                    </div>
                                    <div class="form-group has-feedback">
                                        <label for="email">Email*</label>
                                        <input type="email" class="form-control" id="email" name="email" value="@Model.Email">
                                        <i class="fa fa-envelope form-control-feedback"></i>
                                    </div>
                                    <div class="form-group has-feedback">
                                        <label for="subject">Subject*</label>
                                        <input type="text" class="form-control" id="subject" name="subject" placeholder="">
                                        <i class="fa fa-navicon form-control-feedback" style="margin-top:10px;"></i>
                                    </div>
                                    <div class="form-group has-feedback">
                                        <label for="message">Message*</label>
                                        <textarea class="form-control" rows="6" id="message" name="message" placeholder=""></textarea>
                                        <i class="fa fa-pencil form-control-feedback"></i>
                                    </div>
                                    <input type="submit" value="Submit" class="btn btn-default">
                                </form>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div id="map" style="height: 500px; width: 100%"></div>
                            <script>
                                // Initialize and add the map
                                function initMap() {
                                    // The location of Uluru
                                    var uluru = { lat: 44.309784, lng: 23.836339 };
                                    // The map, centered at Uluru
                                    var map = new google.maps.Map(
                                        document.getElementById('map'), { zoom: 15, center: uluru });
                                    // The marker, positioned at Uluru
                                    var marker = new google.maps.Marker({ position: uluru, map: map });
                                }
                            </script>
                            <!--Load the API from the specified URL
                            * The async attribute allows the browser to render the page while the API loads
                            * The key parameter will contain your own API key (which is not needed for this tutorial)
                            * The callback parameter executes the initMap() function
                            -->
                            <script async defer
                                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA0Gxg2hB6A4hJAQ1VDclKgPwak8tGMiN0&callback=initMap">
                            </script>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </main>
</div>